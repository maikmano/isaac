import { initRemoveAndHideEventListeners } from "./removeAndHideEventListeners";
import initEventsForUpdatingData from "./eventsForUpdatingData";
import initSaveEventListener from "./saveEventListener";
import optionsData from "./optionsData";
import {
  onSave,
  onFileUpload,
  onFileUploadProgress,
  onAddItem,
  onRemoveItem,
  onSync,
} from "./callbacks";
import { initSaveFunctions, callSaveFunction, saveData } from "./onSave";
import initEditableAttribute from "./editableAttribute";
import initAddingItemEventListener from "./addingItemEventListener";
import initSortableElements from "./sortableElements";
import initAutoGeneratedComponents from "./autoGeneratedComponents";
import initEventListenerHelpers from "./eventListenerHelpers";
import runWatchFunctions from "./runWatchFunctions";
import processShowIfAttributes from "../common/show-if";

const merge = require("lodash/merge");

function init(options) {
  merge(optionsData, options);

  if (optionsData.sortable) {
    initSortableElements();
  }

  if (optionsData.alreadyInitialized) {
    if (!document.getElementById("remake__auto-generated")) {
      initAutoGeneratedComponents();
    }

    return;
  }

  processShowIfAttributes();
  runWatchFunctions();

  initAutoGeneratedComponents();

  initSaveFunctions();
  initRemoveAndHideEventListeners();
  initEventsForUpdatingData();
  initSaveEventListener();
  initEditableAttribute();
  initAddingItemEventListener();
  initEventListenerHelpers();

  onAddItem(function () {
    runWatchFunctions();
    processShowIfAttributes();
  });

  onRemoveItem(function () {
    runWatchFunctions();
  });

  optionsData.alreadyInitialized = true;
}

export {
  init,
  callSaveFunction,
  onSave,
  onFileUpload,
  onFileUploadProgress,
  onAddItem,
  onRemoveItem,
  runWatchFunctions,
  onSync,
  saveData,
};
